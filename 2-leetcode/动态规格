# leetcode 376 摆动序列 https://leetcode.cn/problems/wiggle-subsequence/


from typing import List


class Solution:
    def wiggleMaxLength(self, nums: List[int]) -> int:
        dpTblUp = [1] * len(nums)
        dpTbldown = [1] * len(nums)
        res = 1

        for i in range(1, len(nums)):
            for j in range(0, i):
                if nums[i] > nums[j]:
                    dpTblUp[i] = max(dpTblUp[i], dpTbldown[j] + 1)
                    res = max(dpTblUp[i], res)
                elif nums[i] < nums[j]:
                    dpTbldown[i] = max(dpTbldown[i], dpTblUp[j] + 1)
                    res = max(dpTbldown[i], res)
                else:
                    dpTblUp[i] = max(dpTblUp[i], dpTblUp[j])
                    dpTbldown[i] = max(dpTbldown[i], dpTbldown[j])
        return res






if __name__ == '__main__':
    solution = Solution()

    nums_1 = [1,7,4,9,2,5]
    res_1 = Solution.wiggleMaxLength(solution, nums_1)
    print(res_1)


