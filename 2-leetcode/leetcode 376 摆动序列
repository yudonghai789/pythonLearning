# leetcode 376 摆动序列 https://leetcode.cn/problems/wiggle-subsequence/


from typing import List
import unittest


class Solution:
    def wiggleMaxLength(self, nums: List[int]) -> int:
        dpTblUp = [1] * len(nums)
        dpTbldown = [1] * len(nums)
        res = 1

        for i in range(1, len(nums)):
            for j in range(0, i):
                if nums[i] > nums[j]:
                    dpTblUp[i] = max(dpTblUp[i], dpTbldown[j] + 1)
                    res = max(dpTblUp[i], res)
                elif nums[i] < nums[j]:
                    dpTbldown[i] = max(dpTbldown[i], dpTblUp[j] + 1)
                    res = max(dpTbldown[i], res)
                else:
                    dpTblUp[i] = max(dpTblUp[i], dpTblUp[j])
                    dpTbldown[i] = max(dpTbldown[i], dpTbldown[j])
        return res



# -----------单元测试-----------------------------------
class TestSolution(unittest.TestCase):
    def test_3(self):
        solution = Solution()
        nums = [1, 7, 4, 9, 2, 5]
        res = Solution.wiggleMaxLength(solution, nums)
        print(res)
        self.assertEqual(res, 6)






if __name__ == '__main__':
    unittest.main()

